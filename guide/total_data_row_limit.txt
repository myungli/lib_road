전달 인자
$lib->lib_fun("total_data_row_limit");  //라이브러리 로드
list($data,$total,$row_page) = $total_data_row_limit->total_data_row_limit_("no,name,size,pattern,pattern_j,title,read_num,img_s,img_b","contents_group_info","pay_yn!=Y and use_yn=Y","no desc","","10","15");  //함수호출

인자 설명
인자1. 필드명
인자2. 테이블명
인자3. where 값
인자4. order by 값
인자5. group by 값
인자6. 한페이지에 뿌려질 데이터 갯수
인자7. 한페이지에 뿌려질 페이징 갯수

반환값(return)
리턴값1. 모든 데이터, $row[article_num] / 데이터 출력 번호 자동 저장
리턴값2. 데이터 갯수
리턴값3. $row_page 기본값

사용예제
if(!$total){
 echo("");
}else{
 foreach($data as $key=>$row){
 ----프로그래밍----
 $row[article_num] / 데이터 출력 번호 자동 저장
 }
}

소스코드
<?
class total_data_row_limit extends lib_road{
    function total_data_row_limit_($field,$table,$where,$order_by,$group_by,$r_line="15",$p_line="15"){
		$db_total_counter = $this->lib_hab("db_total_counter");
		$total_record = $db_total_counter->db_total_counter_($table,$where);

		$paging = $this->lib_hab("paging");   //library 로드
		$row_page = $paging->paging_($total_record,$GLOBALS[page],$p_line,$r_line);  //함수 호출

		if($total_record){
			$db_select = $this->lib_hab("db_select");  //라이브러리 로드
			$result = $db_select->db_select_($field,$table,$where,$order_by,$group_by,"$row_page[first],$r_line");  //함수호출
			while($row = mysql_fetch_array($result)){
				$row[article_num] = $row_page[article_num];
				$data[] = $row;
				$row_page[article_num]--;
			}
		}
		return array($data,$total_record,$row_page);
    }
}
?>

설명
limit 데이터 일괄처리
페이징을 처리할때만 처리

